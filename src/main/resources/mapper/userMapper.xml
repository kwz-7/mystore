<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mystore.mapper.UserMapper" >
   <sql id="userId">
       select ID,user_name as userName ,sex from t_user
   </sql>
    <cache/>
<resultMap id="userAccount" type="user">
    <id column="id" property="id"></id>

    <result column="user_name" property="userName"></result>
    <result column="sex" property="sex"></result>
    <!--配置user对象中account对象-->
    <collection property="accounts" ofType="account">
        <id column="aid" property="id"></id>
        <result column="uid" property="uid"></result>
        <result column="money" property="money"></result>
    </collection>
</resultMap>
    <resultMap id="userAccountLazy" type="user">
        <id column="id" property="id"></id>

        <result column="user_name" property="userName"></result>
        <result column="sex" property="sex"></result>
        <!--
            column:是查询账户时使用的参数
            select:定位到accountMapper中的根据用户id查询账户信息方法
        -->
        <collection property="accounts" ofType="account" column="id" select="com.mystore.mapper.AccountMapper.getByUserId">
        </collection>
    </resultMap>
    <select id="getAllUser" resultMap="userAccountLazy" >
         <include refid="userId"/>
    </select>

    <select id="getByUserNmae" parameterType="String" resultType="user" useCache="true">
         <include refid="userId"></include>
         where user_name =#{userName}
    </select>
    <select id="getUserAccount" parameterType="String" resultMap="userAccount">
        SELECT u.ID,u.sex,u.user_name,a.MONEY FROM t_user u LEFT JOIN  t_account a on  u.ID=a.UID WHERE u.user_name
          =#{userName}
    </select>
   <select id="getUserById" parameterType="Integer" resultType="user">
       <include refid="userId"></include> where id =#{id}
   </select>
</mapper>

